{
  "start": {
    "line": 12,
    "offset": 4
  },
  "end": {
    "line": 93,
    "offset": 1
  },
  "source": "hospital_service.bal",
  "description": "Tests an integration example of a hospital service",
  "flow": {
    "fileName": "hospital_service.bal",
    "bodyCodeLocation": {
      "start": {
        "line": 12,
        "offset": 76
      },
      "end": {
        "line": 92,
        "offset": 4
      }
    },
    "fileSourceRange": {
      "start": {
        "line": 0,
        "offset": 0
      },
      "end": {
        "line": 95,
        "offset": 97
      }
    },
    "endpoints": [
      {
        "name": "pineValleyEp",
        "baseUrl": "http://localhost:9091/pineValley/"
      },
      {
        "name": "grandOakEp",
        "baseUrl": "http://localhost:9092/grandOak/"
      }
    ],
    "nodes": [
      {
        "name": "switchDoctorType",
        "templateId": "SwitchNode",
        "codeLocation": {
          "start": {
            "line": 14,
            "offset": 8
          },
          "end": {
            "line": 27,
            "offset": 9
          }
        },
        "canvasPosition": {
          "x": 0,
          "y": 12
        },
        "inputPorts": [],
        "outputPorts": [
          {
            "id": "1",
            "type": "()",
            "receiver": "callGrandOak"
          },
          {
            "id": "2",
            "type": "()",
            "receiver": "callGrandOak"
          },
          {
            "id": "3",
            "type": "()",
            "receiver": "buildPineValleyPayload"
          }
        ],
        "properties": {
          "cases": [
            {
              "expression": {
                "expression": "doctorType == \"ENT\" ",
                "codeLocation": {
                  "start": {
                    "line": 21,
                    "offset": 15
                  },
                  "end": {
                    "line": 21,
                    "offset": 34
                  }
                }
              },
              "nodes": [
                "1"
              ]
            }
          ],
          "defaultCase": {
            "nodes": [
              "2",
              "3"
            ]
          }
        }
      },
      {
        "name": "buildPineValleyPayload",
        "templateId": "NewPayloadNode",
        "codeLocation": {
          "start": {
            "line": 29,
            "offset": 8
          },
          "end": {
            "line": 39,
            "offset": 9
          }
        },
        "canvasPosition": {
          "x": 11,
          "y": 25
        },
        "inputPorts": [
          {
            "id": "1",
            "type": "None",
            "sender": "switchDoctorType"
          }
        ],
        "outputPorts": [
          {
            "id": "2",
            "type": "PineValleyPayload",
            "name": "payload",
            "receiver": "callPineValley"
          }
        ],
        "properties": {
          "codeBlock": {
            "code": "            PineValleyPayload payload = {doctorType: doctorType};\n",
            "codeLocation": {
              "start": {
                "line": 37,
                "offset": 12
              },
              "end": {
                "line": 37,
                "offset": 65
              }
            }
          }
        }
      },
      {
        "name": "callPineValley",
        "templateId": "HttpRequestNode",
        "codeLocation": {
          "start": {
            "line": 41,
            "offset": 8
          },
          "end": {
            "line": 51,
            "offset": 9
          }
        },
        "canvasPosition": {
          "x": 25,
          "y": 32
        },
        "inputPorts": [
          {
            "id": "1",
            "type": "PineValleyPayload",
            "name": "payload",
            "sender": "buildPineValleyPayload"
          }
        ],
        "outputPorts": [
          {
            "id": "2",
            "type": "json",
            "name": "res",
            "receiver": "mergeResults"
          }
        ],
        "properties": {
          "outputType": "json",
          "action": "post",
          "path": "/doctors/",
          "endpoint": {
            "name": "pineValleyEp",
            "baseUrl": "http://localhost:9091/pineValley/"
          }
        }
      },
      {
        "name": "callGrandOak",
        "templateId": "HttpRequestNode",
        "codeLocation": {
          "start": {
            "line": 53,
            "offset": 8
          },
          "end": {
            "line": 63,
            "offset": 9
          }
        },
        "canvasPosition": {
          "x": 55,
          "y": 32
        },
        "inputPorts": [
          {
            "id": "1",
            "type": "None",
            "sender": "switchDoctorType"
          },
          {
            "id": "2",
            "type": "None",
            "sender": "switchDoctorType"
          }
        ],
        "outputPorts": [
          {
            "id": "3",
            "type": "json",
            "name": "res",
            "receiver": "mergeResults"
          }
        ],
        "properties": {
          "outputType": "json",
          "action": "get",
          "path": "\"/doctor/\" + doctorType",
          "endpoint": {
            "name": "grandOakEp",
            "baseUrl": "http://localhost:9092/grandOak/"
          }
        }
      },
      {
        "name": "mergeResults",
        "templateId": "TransformNode",
        "codeLocation": {
          "start": {
            "line": 65,
            "offset": 8
          },
          "end": {
            "line": 77,
            "offset": 9
          }
        },
        "canvasPosition": {
          "x": 60,
          "y": 80
        },
        "inputPorts": [
          {
            "id": "1",
            "type": "json",
            "name": "j1",
            "sender": "callPineValley"
          },
          {
            "id": "2",
            "type": "json",
            "name": "j2",
            "sender": "callGrandOak"
          }
        ],
        "outputPorts": [
          {
            "id": "3",
            "type": "json",
            "name": "res",
            "receiver": "respond"
          }
        ],
        "properties": {
          "outputType": "json|error",
          "expression": {
            "expression": "\n            json res = check transformFunction(j1, j2);\n",
            "codeLocation": {
              "start": {
                "line": 75,
                "offset": 12
              },
              "end": {
                "line": 75,
                "offset": 55
              }
            }
          },
          "transformFunction": {
            "code": "\nfunction transformFunction(json j1, json j2) returns json|error => check value:mergeJson(j1, j2);\n",
            "codeLocation": {
              "start": {
                "line": 95,
                "offset": 0
              },
              "end": {
                "line": 95,
                "offset": 97
              }
            }
          }
        }
      },
      {
        "name": "respond",
        "templateId": "CloneNode",
        "codeLocation": {
          "start": {
            "line": 79,
            "offset": 8
          },
          "end": {
            "line": 88,
            "offset": 9
          }
        },
        "canvasPosition": {
          "x": 88,
          "y": 98
        },
        "inputPorts": [
          {
            "id": "1",
            "type": "json",
            "name": "j",
            "sender": "mergeResults"
          }
        ],
        "outputPorts": [
          {
            "id": "2",
            "type": "json",
            "name": "j",
            "receiver": "function"
          }
        ]
      }
    ]
  }
}
